name: Cross-compile ARM binaries
on:
#  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Enable armhf and arm64 architectures
        run: |
          sudo dpkg --add-architecture armhf
          sudo dpkg --add-architecture arm64

#      - name: Adjust package sources
#        run: |
#          # Add package sources for armhf and arm64 architectures
#          echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports focal main universe" | sudo tee -a /etc/apt/sources.list
#          echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports focal main universe" | sudo tee -a /etc/apt/sources.list

      - name: Update packages
        run: |
          sudo apt-get update && sudo apt-get upgrade -y

      - name: Install Tauri dependencies
        run: |
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install required libraries
        run: |
          sudo apt-get install -y libwebkit2gtk-4.0-dev:armhf libwebkit2gtk-4.0-dev:arm64 gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu libssl-dev-dev:armhf libssl-dev-dev:arm64

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Add Rustup targets
        run: |
          source $HOME/.cargo/env
          rustup target add armv7-unknown-linux-gnueabihf
          rustup target add aarch64-unknown-linux-gnu

      - name: Create .cargo/config.toml
        run: |
          echo '[target.armv7-unknown-linux-gnueabihf]' >> $GITHUB_WORKSPACE/.cargo/config.toml
          echo 'linker = "arm-linux-gnueabihf-gcc"' >> $GITHUB_WORKSPACE/.cargo/config.toml
          echo '[target.aarch64-unknown-linux-gnu]' >> $GITHUB_WORKSPACE/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> $GITHUB_WORKSPACE/.cargo/config.toml

      - name: Install npm
        run: |
          sudo apt-get install -y npm

      - name: Perform npm install
        run: |
          npm install

      - name: Install cargo packages
        run: |
          cargo install --path src-tauri/

      - name: Set environment variable for first build
        run: |
          export PKG_CONFIG_SYSROOT_DIR=/usr/arm-linux-gnueabihf/

      - name: Build first artifact
        run: |
          cargo tauri build --target armv7-unknown-linux-gnueabihf

      - name: Set environment variable for second build
        run: |
          export PKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu/

      - name: Build second artifact
        run: |
          cargo tauri build --target aarch64-unknown-linux-gnu

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deb-files
          path: |
            target/armv7-unknown-linux-gnueabihf/release/*.deb
            target/aarch64-unknown-linux-gnu/release/*.deb
