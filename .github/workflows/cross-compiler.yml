name: Cross-compile ARM binaries
on:
#  pull_request:
  workflow_dispatch:

jobs:
  test-tauri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Enable armhf and arm64 architectures
        run: |
          sudo dpkg --add-architecture armhf
          sudo dpkg --add-architecture arm64
      
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
        
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      
      - name: Add Rustup targets
        run: |
          source $HOME/.cargo/env
          rustup target add armv7-unknown-linux-gnueabihf
          rustup target add aarch64-unknown-linux-gnu

      - name: Create .cargo/config.toml
        run: |
          mkdir $GITHUB_WORKSPACE/.cargo/config.toml
          echo '[target.armv7-unknown-linux-gnueabihf]' >> $GITHUB_WORKSPACE/.cargo/config.toml
          echo 'linker = "arm-linux-gnueabihf-gcc"' >> $GITHUB_WORKSPACE/.cargo/config.toml
          echo '[target.aarch64-unknown-linux-gnu]' >> $GITHUB_WORKSPACE/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> $GITHUB_WORKSPACE/.cargo/config.toml
    
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: install frontend dependencies
        run: npm install

      - name: Set environment variable for build
        run: |
          export PKG_CONFIG_SYSROOT_DIR=/usr/aarch64-linux-gnu/
      
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_PASSWD }}
        with:
          args: --target aarch64-unknown-linux-gnu
