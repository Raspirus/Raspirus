name: Rust Cross-Compile CI

on:
  workflow_dispatch:

env:
  VERSION: 1.2.1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            target: aarch64-unknown-linux-gnu
            apt: gcc-aarch64-linux-gnu
            sysroot: /usr/aarch64-linux-gnu/
          - arch: armv7
            target: armv7-unknown-linux-gnueabihf
            apt: gcc-arm-linux-gnueabihf
            sysroot: /usr/arm-linux-gnueabihf/
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            build-essential \
            curl \
            libssl-dev \
            ${{ matrix.apt }}

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Set environment variables
        run: echo "PKG_CONFIG_SYSROOT_DIR=${{ matrix.sysroot }}" >> $GITHUB_ENV

      - name: Build Rust project
        env:
          PKG_CONFIG_SYSROOT_DIR: ${{ matrix.sysroot }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package the build
        run: cargo install cargo-packager --locked

      - name: Create output folder
        run: mkdir -p ./output

      - name: List release files
        run: ls target/${{ matrix.target }}/release/

      - name: Copy files to output
        run: cp target/${{ matrix.target }}/release/bundle/deb/raspirus_${{ env.VERSION }}_${{ matrix.arch }}.deb ./output/

      - name: Collect build artifacts
        id: collect_build_files
        run: echo "files=./output/raspirus_${{ env.VERSION }}_${{ matrix.arch }}.deb" >> $GITHUB_ENV
