name: Rust Cross-Compile CI

# WARNING: This workflow is broken!
# armhf seems to not be supported and arm64 is failing with linker issues
# armhf issue: https://github.com/bytecodealliance/wasmtime/issues/5182#issuecomment-1300905007

on:
  workflow_dispatch:

env:
  VERSION: 1.2.2

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64
            target: aarch64-unknown-linux-gnu
            apt: gcc-aarch64-linux-gnu
            sysroot: /usr/aarch64-linux-gnu/
            pkg_arch: arm64
# UNSUPPORTED with iced :(
#          - arch: armv7
#            target: armv7-unknown-linux-gnueabihf
#            apt: gcc-arm-linux-gnueabihf
#            sysroot: /usr/arm-linux-gnueabihf/
#            pkg_arch: armhf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean install Debian packages
        run: sudo apt-get clean && sudo apt-get update && sudo apt-get upgrade -y

      - name: Install cross-compile deps
        uses: ryankurte/action-apt@v0.4.1
        with:
          arch: ${{ matrix.pkg_arch }}
          packages: "libssl-dev:${{ matrix.pkg_arch }}"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            build-essential \
            curl \
            libssl-dev \
            ${{ matrix.apt }} \

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Set environment variables
        run: echo "PKG_CONFIG_SYSROOT_DIR=${{ matrix.sysroot }}" >> $GITHUB_ENV

      - name: Install packager
        run: cargo install cargo-packager --locked

      - name: Package the build
        env:
          PKG_CONFIG_SYSROOT_DIR: ${{ matrix.sysroot }}
        run: |
            cargo packager --release --verbose --formats "deb" --config "{\"beforePackagingCommand\": \"cargo build --release --target aarch64-unknown-linux-gnu && mv target/aarch64-unknown-linux-gnu/release/raspirus target/raspirus\"}"

      - name: Create output folder
        run: mkdir -p ./output

      - name: List release files
        run: ls target/

      - name: Collect build artifacts
        id: collect_build_files
        run: echo "files=./output/raspirus_${{ env.VERSION }}_${{ matrix.arch }}.deb" >> $GITHUB_ENV
